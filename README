Для решения задачи выбрал RabbitMQ, Postgres и FastAPI по условию.
Задачи реализовал через BackgroundTasks.
@app.on_event("startup") не использовал т.к. устаревшее решение.


Формулировка задания немного скомканная, поэтому решил для себя так:
1. При стартапе приложения инициализируются БД, описывается очередь в брокере. Запускается консьюмер + процессинг в бэкграунде.
2. Хэндлер `/api/start_task` принимает файл и запускает бэкграунд таск паблишера с отправкой сообщений раз в 3 секунды
{"datetime": "15.11.2023 15:00:25.001", "title": "Very fun book", "text": "...Rofl...lol../n..ololo..."}
3. Хэндлер `/api/list` отдает все записи из БД в виде
[
{"datetime": "15.11.2023 15:00:25.001", "title": "Very fun book", "x_avg_count_in_line": 0.012},
{"datetime": "18.01.2023 12:00:25.001", "title": "Other very fun book", "x_avg_count_in_line": 0.032}
]
